---
# Deployment 1 with several Ngnix web server containers
apiVersion: apps/v1
kind: Deployment
metadata:
    name: test1-kms
spec:
    selector:
        matchLabels:
            app: test1-kms
    replicas: 1
    template:
        metadata:
            labels:
                app: test1-kms
        spec:
            containers:
              - name: test1-kms
                image: nginx:1.18
                ports:
                  - containerPort: 80
---
# Define a service that that maps to port 80 on pods with the tag app:test1-kms
apiVersion: v1
kind: Service
metadata:
    name: test1-kms-service
spec:
    selector:
        app: test1-kms
    ports:
      - port: 80
        protocol: TCP
---
# Expose a default http Ingress (i.e. reverse proxy and load balancer) from the
# outside world on port 80 to the Service 1 in the cluster.
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
    name: default-ingress
spec:
    rules:
      - http: # default
            paths:
              - pathType: Prefix
                path: /
                backend:
                    service:
                        name: test1-kms-service
                        port:
                            number: 80
---
# Expose both a http Ingress on port 80 and an https Ingress on port 443 when
# someone in the outside world connects to either of these ports with a
# hostname of test1.kendrickshaw.org, mapping these to Service 1.  LetsEncrypt
# is used to automatically acquire the appropriate TLS certificates.
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
    name: test1-kms-ingress
    annotations:
        cert-manager.io/cluster-issuer: letsencrypt-issuer
        traefik.ingress.kubernetes.io/redirect-entry-point: https
spec:
    tls:
      - hosts:
          - test1.kendrickshaw.org
        secretName: test1-kendrickshaw-org-tls
    rules:
      - host: test1.kendrickshaw.org
        http:
            paths:
              - pathType: Prefix
                path: /
                backend:
                    service:
                        name: test1-kms-service
                        port:
                            number: 80
