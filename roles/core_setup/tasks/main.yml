---
  - set_fact:
        working_admin_account: true

  - name: test the admin account
    block:
      - wait_for_connection:
            timeout: 3
    rescue:
      - set_fact:
            working_admin_account: false

  - import_tasks: admin_account_setup.yml
    when: working_admin_account
  - import_tasks: admin_account_setup.yml
    when: not working_admin_account
    vars:
        ansible_user: root
        become: false

  - name: Remove any root authorized keys (should use admin user)
    file:
        path: /root/.ssh/authorized_keys
        state: absent

  - name: Set root password
    user:
        name: root
        password: "{{ root_password | string
            | password_hash('sha512', 65534
            | random(seed=inventory_hostname) | string) }}"
    when: root_password is defined

  - name: disable root password
    user:
        name: root
        password: "*"
    when: root_password is not defined

  - name: Enable unattended upgrades
    apt:
        name: "{{ item }}"
        state: present
    loop:
        - unattended-upgrades
        - apt-listchanges

  - name: Apply settings for unattended upgrades
    copy:
        src: "files/etc_apt_apt.conf.d_02periodic"
        dest: /etc/apt/apt.conf.d/02periodic
        owner: root
        group: root

  - name: Disable swap
    command: swapoff -a
    changed_when: False  # TODO: could check if swap was enabled

  - name: Remove swap from /etc/fstab
    replace:
        path: /etc/fstab
        regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
        replace: '# \1'

  - name: remove swap logical volume
    lvol:
        vg: "{{ inventory_hostname_short }}-vg"
        lv: swap
        force: yes
        state: absent
    when: full_disk_encryption

  - name: add the machine name to /etc/hosts
    lineinfile:
        path: /etc/hosts
        regexp: '\s{{ inventory_hostname }}\b'
        line: "{{ network_interfaces[primary_interface].subnet
            .hosts[inventory_hostname_short].ip }} {{
            inventory_hostname }} {{
            inventory_hostname_short }}"

  - name: Install basic admin tools
    apt:
        name: "{{ item }}"
        state: present
    loop:
        - vim-nox
        - net-tools
        - rsync

  - name: Add service to force drives to appear as ssds
    when: force_to_appear_as_ssd is defined
    register: force_ssd_result
    copy:
        dest: /etc/init.d/force-to-appear-as-ssd.sh
        mode: 0755
        content: |
            #!/bin/sh

            ### BEGIN INIT INFO
            # Provides:          force-to-appear-as-ssd
            # Required-Start:       $local_fs
            # Required-Stop:        $local_fs
            # Default-Start:        2 3 4 5
            # Default-Stop:         0 1 6
            # Short-Description: Force drives to appear as ssds
            # Description: Forces specific drives to appear as ssds. This is a
            # workaround for virtio marking all devices as rotational storage
            # (regardless of whether they are backed by ssds or hds). Ceph then
            # refuses to use a "rotational" device as a metadata device,
            # preventing the use of an ssd to store the metadata for an hd osd.
            # Manually marking the ssd backed virtio device as a non-rotational
            # device allows us to work around this.
            ### END INIT INFO

            . /lib/lsb/init-functions

            case "$1" in
            start|restart|reload|force-reload)
                    {% for drive in force_to_appear_as_ssd %}
                    echo 0 > /sys/block/{{ drive }}/queue/rotational
                    {% endfor %}
                    exit 0
                    ;;
            stop)
                    exit 0
                    ;;
            *)
                    echo "Usage: force-to-appear-as-ssd.sh " \
                        "{start|stop|restart|reload|force-reload|force-start}"
                    exit 1
                    ;;
            esac

  - name: Make sure service to force drives to appear as ssds is running
    when: force_ssd_result.changed
    shell:
        cmd: systemctl daemon-reload &&
            update-rc.d force-to-appear-as-ssd.sh defaults &&
            service force-to-appear-as-ssd.sh start

  - name: Set shared linux kernel parameters in grub
    lineinfile:
        path: /etc/default/grub
        regexp: '^GRUB_CMDLINE_LINUX='
        line: 'GRUB_CMDLINE_LINUX="{{ grub_cmdline_linux }}"'
    notify: update grub

  - name: Set linux kernel parameters for default menu item in grub
    lineinfile:
        path: /etc/default/grub
        regexp: '^GRUB_CMDLINE_LINUX_DEFAULT='
        line: 'GRUB_CMDLINE_LINUX_DEFAULT="{{ grub_cmdline_linux_default }}"'
    notify: update grub
