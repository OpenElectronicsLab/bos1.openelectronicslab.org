---
  - set_fact:
        working_admin_account: true

  - name: test the admin account
    block:
      - wait_for_connection:
            timeout: 1
    rescue:
      - set_fact:
            working_admin_account: false

  - import_tasks: admin_account_setup.yml
    when: working_admin_account
  - import_tasks: admin_account_setup.yml
    when: not working_admin_account
    vars:
        ansible_user: root
        become: false

  - name: Remove any root authorized keys (should use admin user)
    file:
        path: /root/.ssh/authorized_keys
        state: absent

  - name: Set root password
    user:
        name: root
        password: "{{ root_password | string
            | password_hash('sha512', 65534
            | random(seed=inventory_hostname) | string)
            | default('*') }}"

  - name: Enable unattended upgrades
    apt:
        name: "{{ item }}"
        state: present
    loop:
        - unattended-upgrades
        - apt-listchanges

  - name: Apply settings for unattended upgrades
    copy:
        src: "files/etc_apt_apt.conf.d_02periodic"
        dest: /etc/apt/apt.conf.d/02periodic
        owner: root
        group: root

  - name: Disable swap
    command: swapoff -a
    changed_when: False  # TODO: could check if swap was enabled

  - name: Remove swap from /etc/fstab
    replace:
        path: /etc/fstab
        regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
        replace: '# \1'

  - name: remove swap logical volume
    lvol:
        vg: "{{ inventory_hostname_short }}-vg"
        lv: swap
        force: yes
        state: absent

  - name: configure the primary ethernet adapter
    copy:
        dest: /etc/network/interfaces.d/50-{{ primary_interface }}
        content: |
            auto {{ primary_interface }}
            iface {{ primary_interface }} inet static
                address {{ primary_interface_ip }}
                broadcast {{ primary_interface_subnet.broadcast }}
                netmask {{ primary_interface_subnet.netmask }}
                gateway {{ primary_interface_subnet.gateway }}

  - name: configure the dropbear adapter
    lineinfile:
        path: /etc/dropbear-initramfs/config
        regexp: '^IP='
        line: IP={{ primary_interface_ip }}::{{
            primary_interface_subnet.gateway }}:{{
            primary_interface_subnet.netmask }}:{{
            inventory_hostname_short }}:{{
            primary_interface }}:off
    notify: rebuild initramfs

  - name: Set the dropbear authorized keys
    authorized_key:
        user: root
        state: present
        path: /etc/dropbear-initramfs/authorized_keys
        key_options: 'no-port-forwarding,no-agent-forwarding,no-x11-forwarding,command="/bin/cryptroot-unlock"'
        key: "{{ lookup('file',
                 'secrets/ssh-keys/' + item.username + '.keys') }}"
    loop: "{{ admin_users }}"
    notify: rebuild initramfs
