---
  - name: make sure debian backports is available
    apt_repository:
        repo: deb http://deb.debian.org/debian buster-backports main
        state: present

  - name: install wireguard
    apt:
        name: wireguard
        state: present
    register: wireguard_installed

  - name: update the kernel and related packages
    apt:
        #name: linux-image-amd64
        #state: latest
        upgrade: yes
        update_cache: yes
    when: wireguard_installed.changed


  - name: create the private key file (for convenience)
    copy:
        dest: /etc/wireguard/wireguard-private.key
        content: "{{ wireguard_private_key | trim }}"

  - name: generate the public key
    shell: cat /etc/wireguard/wireguard-private.key | wg pubkey
    changed_when: false
    register: wg_public_key

  - name: generate the wireguard config file
    copy:
        dest: /etc/wireguard/server.conf
        content: |
            [Interface]
            PrivateKey = {{ wireguard_private_key | trim }}
            ListenPort = 55820

            {% for host in groups['all'] %}
            {% if hostvars[host].wg_public_key is defined and
                host != inventory_hostname %}

            # {{ host }}
            [Peer]
            PublicKey = {{ hostvars[host].wg_public_key.stdout }}
            Endpoint = {{
                wireguard_public_subnet.hosts[
                    hostvars[host].inventory_hostname_short].ip
            }}:55820
            AllowedIPs = {{
                wireguard_private_subnet.hosts[
                    hostvars[host].inventory_hostname_short].ip
            }}/32
            {%- if wireguard_private_subnet.hosts[
                hostvars[host].inventory_hostname_short].subnets
                is defined %}
            {%- for subnet in wireguard_private_subnet.hosts[
                hostvars[host].inventory_hostname_short].subnets -%}
            ,{{ subnet }}
            {%- endfor %}
            {% endif %}
            {% endif %}
            {% endfor %}
    notify: restart wireguard

  - name: create the Debian network interface config for wg0
    copy:
        dest: /etc/network/interfaces.d/70-wg0
        content: |
            auto wg0
            iface wg0 inet static
                address {{
                    wireguard_private_subnet.hosts[inventory_hostname_short].ip
                }}/{{ wireguard_private_subnet.CIDR }}
                pre-up ip link add wg0 type wireguard
                pre-up wg setconf wg0 /etc/wireguard/server.conf
            {% if wireguard_private_subnet.mtu is defined %}
                pre-up ip link set mtu {{ wireguard_private_subnet.mtu
                    }} up dev wg0
            {% else %}
                pre-up ip link set mtu 1420 up dev wg0
            {% endif %}
                post-down ip link del wg0
            {% for hostname,hostvals in
                wireguard_private_subnet.hosts.items() %}
            {% if hostname != inventory_hostname_short and
                 hostvals.subnets is defined %}
            {% for subnet in hostvals.subnets %}
                post-up ip route add {{ subnet }} dev wg0
                pre-down ip route del {{ subnet }} dev wg0
            {% endfor %}
            {% endif %}
            {% endfor %}
    notify: restart wireguard

